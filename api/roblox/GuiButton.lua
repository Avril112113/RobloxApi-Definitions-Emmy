-- Generated by robloxPageToEmmy.py

--- GuiLabel is an abstract class that inherits from GuiObject. It is the base class for ImageButton and TextButton. Objects of this type serve to be interactive, clickable user interface elements. It defines several properties for interaction behavior, namely GuiButton/AutoButtonColor and GuiButton/Modal, as well as a handful of events for mouse buttons (GuiButton/MouseButton1Click, GuiButton/MouseButton1Down, etc).
--- The most import ant event of a GuiButton is GuiButton/Activated, a multi-platform event that fires when the button is activated. When using a mouse, this means clicking the button and releasing with the cursor still over the UI object. For touch, the same applies but with a touch instead of button press. Finally, for gamepads, GuiButton/Activated fires if a GuiButton is selected when the A-button is pressed and released. In short, this event is very useful for multi-platform user interface programming as it provides a nice general interface for a single user input.
---@class GuiButton : GuiObject
GuiButton = {
	-- Properties --
	--- Determines whether the button automatically changes color when the mouse hovers over or clicks on it
	---@type boolean
	AutoButtonColor=nil,
	--- If true while the GUI element is visible, the mouse will not be locked unless the right mouse button is down.
	---@type boolean
	Modal=nil,
	--- A boolean property which indicates whether the object has been selected
	---@type boolean
	Selected=nil,
	--- Sets the style of the GuiButton based on a list of pre-determined styles.
	---@type ButtonStyle
	Style=nil
}

-- Functions --


-- Events --
--- Fires when the button is activated
---@class __ignore_Activated__ : RBXScriptSignal
GuiButton.Activated = {Wait=RBXScriptSignal.Wait}
---@param func fun(_inputObject:Instance):void
---@return RBXScriptConnection
function GuiButton.Activated:Connect(func) end

--- Fired when the mouse has fully left clicked the GUI button
---@class __ignore_MouseButton1Click__ : RBXScriptSignal
GuiButton.MouseButton1Click = {Wait=RBXScriptSignal.Wait}
---@param func fun():void
---@return RBXScriptConnection
function GuiButton.MouseButton1Click:Connect(func) end

--- Fired when the mouse is in the left mouse down state on the GUI object
---@class __ignore_MouseButton1Down__ : RBXScriptSignal
GuiButton.MouseButton1Down = {Wait=RBXScriptSignal.Wait}
---@param func fun(x:number,y:number):void
---@return RBXScriptConnection
function GuiButton.MouseButton1Down:Connect(func) end

--- Fired when the left mouse has released the GUI object
---@class __ignore_MouseButton1Up__ : RBXScriptSignal
GuiButton.MouseButton1Up = {Wait=RBXScriptSignal.Wait}
---@param func fun(x:number,y:number):void
---@return RBXScriptConnection
function GuiButton.MouseButton1Up:Connect(func) end

--- Fired when the mouse has fully right clicked the GUI button
---@class __ignore_MouseButton2Click__ : RBXScriptSignal
GuiButton.MouseButton2Click = {Wait=RBXScriptSignal.Wait}
---@param func fun():void
---@return RBXScriptConnection
function GuiButton.MouseButton2Click:Connect(func) end

--- Fired when the mouse is in the right mouse down state on the GUI object
---@class __ignore_MouseButton2Down__ : RBXScriptSignal
GuiButton.MouseButton2Down = {Wait=RBXScriptSignal.Wait}
---@param func fun(x:number,y:number):void
---@return RBXScriptConnection
function GuiButton.MouseButton2Down:Connect(func) end

--- Fired when the right mouse button has been released on a GUI Object
---@class __ignore_MouseButton2Up__ : RBXScriptSignal
GuiButton.MouseButton2Up = {Wait=RBXScriptSignal.Wait}
---@param func fun(x:number,y:number):void
---@return RBXScriptConnection
function GuiButton.MouseButton2Up:Connect(func) end