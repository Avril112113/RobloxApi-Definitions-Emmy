-- Generated by robloxPageToEmmy.py

--- Instance is the base class for all classes in the Roblox class hierarchy. Every other class that the Roblox engine defines inherits all of the members of Instance.  It is not possible to directly create Instance objects.
--- Instance has a special function called Instance.new which is used to create objects via code. This function takes the name of the class as a parameter and returns the created object. Abstract classes and services cannot be created with the Instance.new function.
---@class Instance
Instance = {
	-- Properties --
	--- Determines if an Instance can be cloned using /Instance/Clone or saved to file.
	---@type boolean
	Archivable=nil,
	--- A read-only string representing the class this Instance belongs to
	--- Tags: ReadOnly, NotReplicated
	---@type string
	ClassName=nil,
	--- The cost of saving the instance using data persistence.
	--- Tags: ReadOnly, NotReplicated
	---@type number
	DataCost=nil,
	--- A non-unique identifier of the Instance
	---@type string
	Name=nil,
	--- Determines the hierarchical parent of the Instance
	---@type Instance
	Parent=nil,
	--- If true, the Instance and its descendants cannot be indexed or edited by a Script or LocalScript and will throw an error if it is attempted
	---@type boolean
	RobloxLocked=nil
}

-- Functions --
--- This function destroys all of an Instance's children.
---@return void
function Instance:ClearAllChildren() end

--- Create a deep copy of a Roblox instance and descendants where Archivable = true.
---@return Instance
function Instance:Clone() end

--- Sets the Instance/Parent property to nil, locks the Instance/Parent property, disconnects all connections and calls Destroy on all children.
---@return void
function Instance:Destroy() end

--- Returns the first ancestor of the Instance whose Instance/Name is equal to the given name.
---@param name string
---@return Instance
function Instance:FindFirstAncestor(name) end

--- Returns the first ancestor of the Instance whose Instance/ClassName is equal to the given className.
---@param className string
---@return Instance
function Instance:FindFirstAncestorOfClass(className) end

--- Returns the first ancestor of the Instance for whom Instance/IsA returns true for the given className.
---@param className string
---@return Instance
function Instance:FindFirstAncestorWhichIsA(className) end

--- Returns the first child of the Instance found with the given name.
---@param name string
---@param recursive boolean
---@return Instance
function Instance:FindFirstChild(name, recursive) end

--- Returns the first child of the Instance whose Instance/ClassName|ClassName is equal to the given className.
---@param className string
---@return Instance
function Instance:FindFirstChildOfClass(className) end

--- Returns the first child of the Instance for whom Instance/IsA returns true for the given className.
---@param className string
---@param recursive boolean
---@return Instance
function Instance:FindFirstChildWhichIsA(className, recursive) end

--- Returns an array containing all of the Instance's children.
---@return Instance[]
function Instance:GetChildren() end

--- Returns a coded string of the Instances DebugId used internally by Roblox.
--- Tags: NotBrowsable
	---@param scopeLength number
---@return string
function Instance:GetDebugId(scopeLength) end

--- Returns an array containing all of the descendants of the instance
--- Tags: CustomLuaState
	---@return any[]
function Instance:GetDescendants() end

--- Returns a string describing the Instance's ancestry.
---@return string
function Instance:GetFullName() end

--- Get an event that fires when a given property of an object changes.
---@param property string
---@return RBXScriptSignal
function Instance:GetPropertyChangedSignal(property) end

--- Returns true if an Instance's class matches or inherits from a given class
--- Tags: CustomLuaState
	---@param className string
---@return boolean
function Instance:IsA(className) end

--- Returns true if an Instance is an ancestor of the given descendant.
---@param descendant Instance
---@return boolean
function Instance:IsAncestorOf(descendant) end

--- Returns true if an Instance is a descendant of the given ancestor.
---@param ancestor Instance
---@return boolean
function Instance:IsDescendantOf(ancestor) end

--- Returns the child of the Instance with the given name. If the child does not exist, it will yield the current thread until it does.
--- Tags: CustomLuaState, CanYield
	---@param childName string
---@param timeOut number
---@return Instance
function Instance:WaitForChild(childName, timeOut) end

-- Events --
--- Fires when the Instance/Parent property of the object or one of its ancestors is changed.
---@class __ignore_AncestryChanged__ : RBXScriptSignal
Instance.AncestryChanged = {Wait=RBXScriptSignal.Wait}
---@param func fun(child:Instance,parent:Instance):void
---@return RBXScriptConnection
function Instance.AncestryChanged:Connect(func) end

--- Fired immediately after a property of an object changes.
---@class __ignore_Changed__ : RBXScriptSignal
Instance.Changed = {Wait=RBXScriptSignal.Wait}
---@param func fun(property:string):void
---@return RBXScriptConnection
function Instance.Changed:Connect(func) end

--- Fires when an object is parented to this Instance.
---@class __ignore_ChildAdded__ : RBXScriptSignal
Instance.ChildAdded = {Wait=RBXScriptSignal.Wait}
---@param func fun(child:Instance):void
---@return RBXScriptConnection
function Instance.ChildAdded:Connect(func) end

--- Fires when a child is removed from this Instance.
---@class __ignore_ChildRemoved__ : RBXScriptSignal
Instance.ChildRemoved = {Wait=RBXScriptSignal.Wait}
---@param func fun(child:Instance):void
---@return RBXScriptConnection
function Instance.ChildRemoved:Connect(func) end

--- Fires when a descendant is added to the Instance
---@class __ignore_DescendantAdded__ : RBXScriptSignal
Instance.DescendantAdded = {Wait=RBXScriptSignal.Wait}
---@param func fun(descendant:Instance):void
---@return RBXScriptConnection
function Instance.DescendantAdded:Connect(func) end

--- Fires immediately before a descendant of the Instance is removed.
---@class __ignore_DescendantRemoving__ : RBXScriptSignal
Instance.DescendantRemoving = {Wait=RBXScriptSignal.Wait}
---@param func fun(descendant:Instance):void
---@return RBXScriptConnection
function Instance.DescendantRemoving:Connect(func) end