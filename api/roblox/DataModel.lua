-- Generated by robloxPageToEmmy.py

--- The DataModel (commonly known as game after the global variable used to access it) is the root of Roblox’s parent-child hierarchy. Its direct children are services (such as the Workspace and Lighting) that act as the fundamental components of a Roblox game.
---@class DataModel
DataModel = {
	-- Properties --
	--- Describes the ID of the user or group that owns the Articles/Place|place
	--- Tags: ReadOnly, NotReplicated
	---@type number
	CreatorId=nil,
	--- Describes the Enum/CreatorType of the Articles/Place|place, whether the place is owned by a user or a group
	--- Tags: ReadOnly, NotReplicated
	---@type CreatorType
	CreatorType=nil,
	--- Describes the ID of the Articles/Multi Place Games|game the Articles/Place|place running on the server belongs to
	--- Tags: ReadOnly, NotReplicated
	---@type number
	GameId=nil,
	--- Not functional. Historically described the Enum/Genre of the Articles/Place|place as set on the Roblox website
	--- Tags: ReadOnly, NotReplicated
	---@type Genre
	Genre=nil,
	--- A unique identifier for the game server instance running. Defaults to an empty string in Roblox Studio.
	--- Tags: ReadOnly, NotReplicated
	---@type string
	JobId=nil,
	--- Describes the ID of the Articles/Place|place running on the server
	--- Tags: ReadOnly, NotReplicated
	---@type number
	PlaceId=nil,
	--- Describes the version of the Articles/Place|place the server is running on
	--- Tags: ReadOnly, NotReplicated
	---@type number
	PlaceVersion=nil,
	--- Describes the private server ID of the server, if the server is a Articles/Creating a VIP Server on Roblox|VIP server or a TeleportService/ReserveServer|reserved server
	--- Tags: ReadOnly, NotReplicated
	---@type string
	PrivateServerId=nil,
	--- Describes the Player/UserId|UserId of the Player that owns the Articles/Creating a VIP Server on Roblox|VIP server, if the server is a VIP server
	--- Tags: ReadOnly, NotReplicated
	---@type number
	PrivateServerOwnerId=nil,
	--- A reference to the Workspace service
	--- Tags: ReadOnly, NotReplicated
	---@type Workspace
	Workspace=nil
}

-- Functions --
--- Binds a function to be called before the game shuts down. The game will wait for all functions bound to complete before shutting down
---@param _function function
---@return void
function DataModel:BindToClose(_function) end

--- Returns the job interval peak fraction of the specified task scheduler job.
---@param jobname string
---@param greaterThan number
---@return number
function DataModel:GetJobIntervalPeakFraction(jobname, greaterThan) end

--- Returns the job time peak fraction of the specified task scheduler job.
---@param jobname string
---@param greaterThan number
---@return number
function DataModel:GetJobTimePeakFraction(jobname, greaterThan) end

--- Returns a table containing extended statistics on the jobs performed by the task scheduler
---@return any[]
function DataModel:GetJobsExtendedStats() end

--- Returns a table containing basic information about the jobs performed by the task scheduler
---@return any[]
function DataModel:GetJobsInfo() end

--- Returns an array of Instance|Instances associated with the given Articles/Content|content URL
---@param url string @ RealSignature ContentString
---@return Instance[]
function DataModel:GetObjects(url) end

--- Returns true if the client has finished loading the game for the first time
---@return boolean
function DataModel:IsLoaded() end

--- Loads a Roblox Place File from a URL.
---@param url string @ RealSignature ContentString
---@return void
function DataModel:Load(url) end

--- Sets the DataModel/PlaceId of the current game instance to the given placeId
---@param placeId number
---@return void
function DataModel:SetPlaceId(placeId) end

--- Sets the DataModel/GameId of the current game instance to the given universeId
---@param universeId number
---@return void
function DataModel:SetUniverseId(universeId) end

--- Shuts down the current game instance
---@return void
function DataModel:Shutdown() end

-- Events --
--- Fires when the user prompts and increase or decrease in graphics quality using the hotkeys
---@class __ignore_GraphicsQualityChangeRequest__ : RBXScriptSignal
DataModel.GraphicsQualityChangeRequest = {Wait=RBXScriptSignal.Wait}
---@param func fun(betterQuality:boolean):void
---@return RBXScriptConnection
function DataModel.GraphicsQualityChangeRequest:Connect(func) end

--- Fires on the client when the game finishes loading for the first time
---@class __ignore_Loaded__ : RBXScriptSignal
DataModel.Loaded = {Wait=RBXScriptSignal.Wait}
---@param func fun():void
---@return RBXScriptConnection
function DataModel.Loaded:Connect(func) end

-- Additional Features --
-- ServiceProvider Patch --
---@param className '"HttpRbxApiService"'|'"NotificationService"'|'"GuiService"'|'"UserInputService"'|'"HttpService"'|'"RunService"'|'"TestService"'|'"PathfindingService"'|'"AnalyticsService"'|'"FlyweightService"'|'"CSGDictionaryService"'|'"NonReplicatedCSGDictionaryService"'|'"LoginService"'|'"ThirdPartyUserService"'|'"TouchInputService"'|'"RuntimeScriptService"'|'"GuidRegistryService"'|'"PhysicsService"'|'"AdService"'|'"TextService"'|'"MarketplaceService"'|'"TeleportService"'|'"GamePassService"'|'"AssetService"'|'"InsertService"'|'"PointsService"'|'"ChangeHistoryService"'|'"ServerScriptService"'|'"JointsService"'|'"LogService"'|'"LocalizationService"'|'"ControllerService"'|'"ServiceProvider"'|'"LuaWebService"'|'"ScriptService"'|'"FlagStandService"'|'"SpawnerService"'|'"TimerService"'|'"CookiesService"'|'"GroupService"'|'"CollectionService"'|'"TweenService"'|'"ContextActionService"'|'"SoundService"'|'"VRService"'|'"PluginGuiService"'|'"BadgeService"'|'"DataStoreService"'|'"HapticService"'|'"FriendService"'|'"GamepadService"'
---@return Instance
function DataModel:GetService(className) end
---@param className '"HttpRbxApiService"'|'"NotificationService"'|'"GuiService"'|'"UserInputService"'|'"HttpService"'|'"RunService"'|'"TestService"'|'"PathfindingService"'|'"AnalyticsService"'|'"FlyweightService"'|'"CSGDictionaryService"'|'"NonReplicatedCSGDictionaryService"'|'"LoginService"'|'"ThirdPartyUserService"'|'"TouchInputService"'|'"RuntimeScriptService"'|'"GuidRegistryService"'|'"PhysicsService"'|'"AdService"'|'"TextService"'|'"MarketplaceService"'|'"TeleportService"'|'"GamePassService"'|'"AssetService"'|'"InsertService"'|'"PointsService"'|'"ChangeHistoryService"'|'"ServerScriptService"'|'"JointsService"'|'"LogService"'|'"LocalizationService"'|'"ControllerService"'|'"ServiceProvider"'|'"LuaWebService"'|'"ScriptService"'|'"FlagStandService"'|'"SpawnerService"'|'"TimerService"'|'"CookiesService"'|'"GroupService"'|'"CollectionService"'|'"TweenService"'|'"ContextActionService"'|'"SoundService"'|'"VRService"'|'"PluginGuiService"'|'"BadgeService"'|'"DataStoreService"'|'"HapticService"'|'"FriendService"'|'"GamepadService"'
---@return Instance
function DataModel:FindService(className) end

-- Global Variable Name Patch --
---@type DataModel
game = nil